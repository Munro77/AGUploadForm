@{
    //ViewData["Title"] = "Home Page";
}
@model AGUploadForm.Models.FormViewModels.FormViewModel

<script type="text/javascript">
    $(document).ready(function () {
        $("#SelectedOfficeName").change(function () {
            $("#SelectedDepartmentName").empty();
            $("#SelectedDepartmentName").append('<option value=""></option>');
            if ($("#SelectedOfficeName").val() != "") {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetDepartmentSelectListByOfficeName")',
                    dataType: 'json',
                    data: { officeName: $("#SelectedOfficeName").val() },
                    success: function (departments) {
                        $.each(departments, function (i, department) {
                            $("#SelectedDepartmentName").append('<option value="' + department.value + '">' + department.text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve departments.' + ex);
                    }
                });
            }
            return false;
        });
    });
</script>

@Html.LabelFor(model => model.SelectedOfficeName)
@Html.DropDownListFor(model => model.SelectedOfficeName, Model.OfficeSelectList, "", new { @class = "form-control" })

@Html.LabelFor(mode => mode.SelectedDepartmentName)
@Html.DropDownList("SelectedDepartmentName", new SelectList(string.Empty, "Value", "Text"), "", new { @class = "form-control" })
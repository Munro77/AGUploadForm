@{
    //ViewData["Title"] = "Home Page";
}
@model AGUploadForm.Models.FormViewModels.FormViewModel

<!-- jQquery File Upload Plugin and Gallery styles -->
<link href="~/Backload/Client/blueimp/bundles/css/jquery.fileupload.bundle.min.css" rel="stylesheet" />
<link href="~/Backload/Client/blueimp/gallery/css/blueimp-gallery.min.css" rel="stylesheet" />

<!-- The main application styles -->
<link href="~/Content/demo.styles.css" rel="stylesheet" />

<script src="~/Backload/Client/blueimp/bundles/js/jquery.fileupload.basicplusui.min.js"></script>

<!-- Gallery script (image preview) -->
<script src="~/Backload/Client/blueimp/gallery/js/jquery.blueimp-gallery.min.js"></script>

<!-- The demo application script -->
<script src="~/Scripts/demos.blueimp.basicplusui.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#SelectedOfficeName").change(function () {
            $("#SelectedDepartmentName").empty();
            $("#SelectedDepartmentName").append('<option value="">Select One</option>').prop('disabled',false);
            if ($("#SelectedOfficeName").val() != "") {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetDepartmentSelectListByOfficeName")',
                    dataType: 'json',
                    data: { officeName: $("#SelectedOfficeName").val() },
                    success: function (departments) {
                        $.each(departments, function (i, department) {
                            $("#SelectedDepartmentName").append('<option value="' + department.value + '">' + department.text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve departments.' + ex);
                    }
                });
            }
            else
            {
                $("#SelectedDepartmentName").empty();
                $("#SelectedDepartmentName").append('<option value="">Choose a Location</option>').prop('disabled', true);
            }
            return false;
        });
        $('input[type="reset"]').click(function () {
            $("#SelectedOfficeName").val("");
            $("#SelectedOfficeName").trigger('change');
        });
        $("#SubmitButton").click(function () {
            $("#SubmitForm").submit();
        });

        $("#SelectedDepartmentName").prop('disabled', ($("#SelectedOfficeName").val() == ""));
    });
</script>

<script id="template-upload" type="text/x-tmpl">
    {% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-upload fade">
        <td>
            <span class="preview"></span>
        </td>
        <td>
            <p class="name">{%=file.name%}</p>
            <strong class="error text-danger"></strong>
        </td>
        <td>
            <p class="size">Processing...</p>
            <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>
        </td>
        <td>
            {% if (!i && !o.options.autoUpload) { %}
            <button class="btn btn-primary start" disabled>
                <i class="glyphicon glyphicon-upload"></i>
                <span>Start</span>
            </button>
            {% } %}
            {% if (!i) { %}
            <button class="btn btn-warning cancel">
                <i class="glyphicon glyphicon-ban-circle"></i>
                <span>Cancel</span>
            </button>
            {% } %}
        </td>
    </tr>
    {% } %}
</script>

<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
    {% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-download fade">
        <td>
            <span class="preview">
                {% if (file.thumbnailUrl) { %}
                <a href="{%=file.url%}" title="{%=file.extra.originalName%}" download="{%=file.name%}" data-gallery><img src="{%=file.thumbnailUrl%}"></a>
                {% } %}
            </span>
        </td>
        <td>
            <p class="name">
                {% if (file.url) { %}
                <a href="{%=file.url%}" title="{%=file.extra.originalName%}" download="{%=file.name%}" {%=file.thumbnailUrl?'data-gallery':''%}>{%=file.extra.originalName%}</a>
                {% } else if (file.extra) { %}
                <span>{%=file.extra.originalName%}</span>
                {% } else { %}
                <span>{%=file.name%}</span>
                {% } %}
            </p>
            {% if (file.error) { %}
            <div><span class="label label-danger">Error</span> {%=file.error%}</div>
            {% } %}
        </td>
        <td>
            <span class="size">{%=o.formatFileSize(file.size)%}</span>
        </td>
        <td>
            {% if (file.deleteUrl) { %}
            <button class="btn btn-danger delete" data-type="{%=file.deleteType%}" data-url="{%=file.deleteUrl%}" {% if (file.deletewithcredentials) { %} data-xhr-fields='{"withCredentials":true}' {% } %}>
                <i class="glyphicon glyphicon-trash"></i>
                <span>Delete</span>
            </button>
            <input type="checkbox" name="delete" value="1" class="toggle invisible" checked="checked">
            {% } else { %}
            <button class="btn btn-warning cancel">
                <i class="glyphicon glyphicon-ban-circle"></i>
                <span>Cancel</span>
            </button>
            {% } %}
        </td>
    </tr>
    {% } %}
</script>

<form id="SubmitForm" method="post">
    <div class="form-horizontal">
        @Html.HiddenFor(model => model.ObjectContextId)
        <div class="form-group">
            <div class="col-md-3 text-right">
                @Html.LabelFor(model => model.SelectedOfficeName)
            </div>
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.SelectedOfficeName, Model.OfficeSelectList, "Select One", new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                @Html.ValidationMessageFor(model => model.SelectedOfficeName)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3 text-right">
                @Html.LabelFor(model => model.SelectedDepartmentName)
            </div>
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.SelectedDepartmentName, Model.DepartmentSelectList, "Choose a Location", new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                @Html.ValidationMessageFor(model => model.SelectedDepartmentName)
            </div>
        </div>

        <!-- Job Information -->
        <div class="row">
            <div class="col-md-3 text-right">
                <h3>
                    Job Information
                </h3>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3 text-right">
                @Html.LabelFor(model => model.JobInformation.DueDateTime)
            </div>
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.JobInformation.DueDateTime, new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                @Html.ValidationMessageFor(model => model.JobInformation.DueDateTime)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3 text-right">
                @Html.LabelFor(model => model.JobInformation.AccountNumber)
            </div>
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.JobInformation.AccountNumber, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3 text-right">
                @Html.LabelFor(model => model.JobInformation.ProjectNumber)
            </div>
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.JobInformation.ProjectNumber, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3 text-right">
                @Html.LabelFor(model => model.JobInformation.Instructions)
            </div>
            <div class="col-md-3">
                @Html.TextAreaFor(model => model.JobInformation.Instructions, new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                @Html.ValidationMessageFor(model => model.JobInformation.Instructions)
            </div>
        </div>

        <!-- Contact Information -->
        <div class="row">
            <div class="col-md-3 text-right">
                <h3>
                    Contact Infromation
                </h3>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3 text-right">
                @Html.LabelFor(model => model.ContactInformation.Name)
            </div>
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.ContactInformation.Name, new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                @Html.ValidationMessageFor(model => model.ContactInformation.Name)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3 text-right">
                @Html.LabelFor(model => model.ContactInformation.Company)
            </div>
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.ContactInformation.Company, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3 text-right">
                @Html.LabelFor(model => model.ContactInformation.Address)
            </div>
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.ContactInformation.Address, new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                @Html.ValidationMessageFor(model => model.ContactInformation.Address)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3 text-right">
                @Html.LabelFor(model => model.ContactInformation.Email)
            </div>
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.ContactInformation.Email, new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                @Html.ValidationMessageFor(model => model.ContactInformation.Email)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3 text-right">
                @Html.LabelFor(model => model.ContactInformation.PhoneNumber)
            </div>
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.ContactInformation.PhoneNumber, new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                @Html.ValidationMessageFor(model => model.ContactInformation.PhoneNumber)
            </div>
        </div>
        <div class="row">
            <div class="col-md-10 text-right">
                <input type="reset" class="btn btn-warning" value="Clear All Fields" />
            </div>
        </div>
    </div>
</form>

<!-- File Upload -->
<form id="fileupload" action="/Backload/FileHandler" method="POST" enctype="multipart/form-data">
    @Html.Hidden("objectContext", Model.ObjectContextId)
    <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
    <div class="row fileupload-buttonbar">
        <div class="col-md-7">
            <!-- The fileinput-button span is used to style the file input field as button -->
            <span class="btn btn-success fileinput-button">
                <i class="glyphicon glyphicon-plus"></i>
                <span>Add File(s)</span>
                <input type="file" name="files[]" multiple>
            </span>
            <!--
            <button type="submit" class="btn btn-primary start">
                <i class="glyphicon glyphicon-upload"></i>
                <span>Start upload</span>
            </button>
            <button type="reset" class="btn btn-warning cancel">
                <i class="glyphicon glyphicon-ban-circle"></i>
                <span>Cancel upload</span>
            </button>
            //-->
            <button type="button" class="btn btn-danger delete">
                <i class="glyphicon glyphicon-trash"></i>
                <span>Clear All Files</span>
            </button>
            <!-- <input type="checkbox" class="toggle"> //-->
            <!-- The global file processing state -->
            <span class="fileupload-process"></span>
        </div>
        <!-- The global progress state -->
        <div class="col-md-5 fileupload-progress fade">
            <!-- The global progress bar -->
            <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                <div class="progress-bar progress-bar-success" style="width:0%;"></div>
            </div>
            <!-- The extended global progress state -->
            <div class="progress-extended">&nbsp;</div>
        </div>
    </div>
    <!-- The table listing the files available for upload/download -->
    <table role="presentation" class="table table-striped"><tbody class="files"></tbody></table>
</form>

<div class="row">
    <div class="col-md-10 text-right">
        <button type="button" class="btn btn-success" id="SubmitButton">
            <span>Submit</span>
        </button>
    </div>
</div>
